upstream upstream_app {
    server backend:8000;
}

# MCP server configuration
server {
    listen 80 default_server;

    location ~ ^/mcp/([a-zA-Z0-9]+)$ {
        proxy_pass http://upstream_app/mcp/$1/;
        proxy_set_header X-Forwarded-For $remote_addr;
        set $mcp_server_transport "websocket";
        if ($http_connection != "Upgrade") {
            set $mcp_server_transport "sse";
        }
        proxy_set_header X-MCP-Transport $mcp_server_transport;
    }

    location ~ ^/internal/([a-zA-Z0-9-]+)/([a-zA-Z0-9-]+)$ {
        internal;
        set $mcp_server_name $1;
        nchan_channel_id $2;
        # only support websocket and eventsource
        nchan_subscriber websocket eventsource;
        nchan_subscribe_request /internal/mcp-process;
        # eventsource can not send message
        nchan_publisher websocket;
        nchan_publisher_upstream_request /internal/mcp-process;
    }

    # MCP channel location, the path is the MCP server name
    location ~ ^/mcp/(.+)/(.+)$ {
        # Extract MCP server name
        set $mcp_server_name $1;
        nchan_channel_id $2;
        # Message storage
        nchan_store_messages off;
        nchan_publisher http;
        # only using when the transport is eventsource, send message by using http request
        set $mcp_server_transport "sse";
        # skip send message to upstream when have X-EventSource-Event header
        if ($http_x_eventsource_event = "") {
            nchan_publisher_upstream_request /internal/mcp-process;
        }
    }
    
    # Internal endpoint for processing MCP requests
    location /internal/mcp-process {
        internal;  # Only accessible within nginx

        set $method 'endpoint';
        # Extract method from JSON request body
        if ($request_body ~* '"method"\s*:\s*"([^"]+)"') {
            set $method $1;
        }
        # Proxy to the Python Starlette backend
        proxy_pass http://upstream_app/mcp/$mcp_server_name/$method;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-MCP-Server-Name $mcp_server_name;
        proxy_set_header X-MCP-Transport $mcp_server_transport;
        proxy_set_header X-MCP-Session-ID $nchan_channel_id;
        proxy_set_header Content-Type $content_type;
        proxy_pass_request_body on;
    }
}